<!DOCTYPE html>
<html lang="ar" dir="rtl" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EgyFilm - مشاهدة الأفلام والمسلسلات</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Google Fonts: Cairo for Arabic -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Custom CSS -->
    <style>
        body {
            font-family: 'Cairo', sans-serif;
            background-color: #111827; /* Dark Gray */
            color: #d1d5db; /* Light Gray */
        }
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }
        ::-webkit-scrollbar-track {
            background: #1f2937;
        }
        ::-webkit-scrollbar-thumb {
            background: #e50914; /* Red */
            border-radius: 10px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #f5313d;
        }
        /* Active navigation link style */
        .nav-link.active {
            color: #e50914;
            font-weight: 700;
        }
        /* Slider styles */
        .slider-item {
            display: none;
            transition: opacity 0.5s ease-in-out;
        }
        .slider-item.active {
            display: block;
        }
        /* Movie card overlay */
        .card-overlay {
            background: linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0) 100%);
        }
        /* Play button hover effect */
        .play-icon-hover {
            transition: transform 0.3s ease, background-color 0.3s ease;
        }
        .group:hover .play-icon-hover {
            transform: scale(1.1);
            background-color: rgba(229, 9, 20, 0.8);
        }
        /* Hidden pages styles */
        .page {
            display: none;
        }
        .page.active {
            display: block;
        }
    </style>
</head>
<body class="antialiased">

    <!-- App Container -->
    <div id="app" class="min-h-screen">

        <!-- Header -->
        <header class="bg-gray-900/80 backdrop-blur-lg sticky top-0 z-40 shadow-lg shadow-black/20">
            <nav class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex items-center justify-between h-16">
                    <!-- Logo -->
                    <div class="flex-shrink-0">
                        <a href="#" class="text-2xl font-extrabold tracking-wider nav-link" data-page="home">
                            <span class="text-red-600">Egy</span><span class="text-white">Film</span>
                        </a>
                    </div>

                    <!-- Desktop Navigation -->
                    <div class="hidden md:block">
                        <div class="mr-10 flex items-baseline space-x-4 space-x-reverse">
                            <a href="#" class="nav-link text-gray-300 hover:text-red-500 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-300" data-page="home">الرئيسية</a>
                            <a href="#" class="nav-link text-gray-300 hover:text-red-500 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-300" data-page="movies">أفلام</a>
                            <a href="#" class="nav-link text-gray-300 hover:text-red-500 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-300" data-page="series">مسلسلات</a>
                            <a href="#" class="nav-link text-gray-300 hover:text-red-500 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-300" data-page="categories">الفئات</a>
                        </div>
                    </div>
                    
                    <!-- Search Bar -->
                    <div class="flex-1 max-w-xs mr-4">
                         <div class="relative">
                            <input id="search-input" type="text" placeholder="ابحث عن أفلام، مسلسلات..." class="w-full bg-gray-800 border border-gray-700 text-white rounded-full py-2 pr-10 pl-4 focus:outline-none focus:ring-2 focus:ring-red-600 transition-all duration-300">
                            <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" /></svg>
                            </div>
                        </div>
                    </div>

                    <!-- Mobile Menu Button -->
                    <div class="md:hidden flex items-center mr-4">
                        <button id="mobile-menu-button" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
                            <span class="sr-only">Open main menu</span>
                            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                    </div>
                </div>
            </nav>
            <!-- Mobile Menu -->
            <div id="mobile-menu" class="md:hidden hidden">
                <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
                    <a href="#" class="nav-link text-gray-300 hover:text-red-500 block px-3 py-2 rounded-md text-base font-medium" data-page="home">الرئيسية</a>
                    <a href="#" class="nav-link text-gray-300 hover:text-red-500 block px-3 py-2 rounded-md text-base font-medium" data-page="movies">أفلام</a>
                    <a href="#" class="nav-link text-gray-300 hover:text-red-500 block px-3 py-2 rounded-md text-base font-medium" data-page="series">مسلسلات</a>
                    <a href="#" class="nav-link text-gray-300 hover:text-red-500 block px-3 py-2 rounded-md text-base font-medium" data-page="categories">الفئات</a>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main>
            <!-- Home Page -->
            <div id="home-page" class="page active">
                <!-- Slider Section -->
                <section id="slider-section" class="relative h-[60vh] md:h-[80vh] w-full overflow-hidden">
                    <div id="slider-container" class="relative h-full">
                        <!-- Slider items will be injected here -->
                    </div>
                    <div class="absolute bottom-5 left-1/2 -translate-x-1/2 z-10 flex space-x-2 space-x-reverse" id="slider-dots">
                        <!-- Dots will be injected here -->
                    </div>
                </section>

                <!-- Telegram Banner -->
                <div class="bg-red-600 text-white text-center p-3">
                    <a href="#" class="font-semibold underline">اشترك في قناتنا على تليجرام لآخر التحديثات!</a>
                </div>

                <!-- Content Sections -->
                <div id="content-sections" class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
                    <!-- Sections will be injected here -->
                </div>
            </div>

            <!-- Details Page -->
            <div id="details-page" class="page">
                <!-- Details content will be injected here -->
            </div>

            <!-- Generic List Page (for movies, series, categories, search results) -->
            <div id="list-page" class="page">
                <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
                    <h2 id="list-page-title" class="text-3xl font-bold text-white mb-6"></h2>
                    <div id="list-page-grid" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 md:gap-6">
                        <!-- Movie cards will be injected here -->
                    </div>
                    <div id="list-page-pagination" class="flex justify-center mt-8">
                        <!-- Pagination controls will be injected here -->
                    </div>
                </div>
            </div>
        </main>
        
        <!-- Footer -->
        <footer class="bg-gray-900 border-t border-gray-800 mt-12">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
                <div class="flex flex-col md:flex-row justify-between items-center text-center md:text-right">
                    <div class="mb-4 md:mb-0">
                         <a href="#" class="text-2xl font-extrabold tracking-wider" data-page="home">
                            <span class="text-red-600">Egy</span><span class="text-white">Film</span>
                        </a>
                        <p class="text-sm text-gray-400 mt-2">مصدرك لأحدث الأفلام والمسلسلات.</p>
                    </div>
                    <div class="flex space-x-6 space-x-reverse">
                        <a href="#" class="text-gray-400 hover:text-red-500 transition-colors">اتصل بنا</a>
                        <a href="#" class="text-gray-400 hover:text-red-500 transition-colors">سياسة الخصوصية</a>
                        <a href="#" class="text-gray-400 hover:text-red-500 transition-colors">حقوق النشر</a>
                    </div>
                </div>
                <div class="mt-8 border-t border-gray-700 pt-4 text-center text-gray-500 text-sm">
                    <p>&copy; 2025 EgyFilm. جميع الحقوق محفوظة. هذا الموقع لا يخزن أي ملفات على خوادمه.</p>
                </div>
            </div>
        </footer>

    </div>

    <!-- JavaScript Logic -->
    <script>
    document.addEventListener('DOMContentLoaded', function () {

        // --- MOCK DATABASE (ARABIC) ---
        const mockDatabase = [
            {
                id: 1,
                title: 'كثيب: الجزء الثاني',
                year: 2024,
                rating: 8.9,
                genre: ['خيال علمي', 'مغامرة', 'أكشن'],
                description: 'يتحد بول آتريديز مع تشاني والفريمين بينما يسعى للانتقام من المتآمرين الذين دمروا عائلته.',
                poster: 'https://placehold.co/500x750/1a202c/ffffff?text=Dune+2',
                backdrop: 'https://placehold.co/1920x1080/1a202c/ffffff?text=Dune+Part+Two',
                cast: ['تيموثي شالاميت', 'زيندايا', 'ريبيكا فيرغسون'],
                trailer: 'https://www.youtube.com/embed/Way9Dexny3w',
                isSeries: false,
                isFeatured: true,
                servers: [
                    { name: 'سيرفر 1', url: 'https://player.vidsrc.to/embed/movie/tt1160419' },
                    { name: 'جودة عالية', url: 'https://multiembed.mov/?video_id=tt1160419' },
                ]
            },
            {
                id: 2,
                title: 'شوغون',
                year: 2024,
                rating: 9.2,
                genre: ['دراما', 'تاريخ', 'حرب'],
                description: 'عندما يتم العثور على سفينة أوروبية غامضة تقطعت بها السبل في قرية صيد قريبة، يأتي طيارها الإنجليزي، جون بلاكثورن، حاملاً أسرارًا يمكن أن تساعد توراناغا على قلب موازين القوى.',
                poster: 'https://placehold.co/500x750/1a202c/ffffff?text=Shogun',
                backdrop: 'https://placehold.co/1920x1080/1a202c/ffffff?text=Shogun',
                cast: ['هيرويوكي سانادا', 'كوزمو جارفيس', 'آنا ساواي'],
                trailer: 'https://www.youtube.com/embed/H20_F_a_LwA',
                isSeries: true,
                isFeatured: true,
                seasons: [
                    {
                        season: 1,
                        episodes: [
                            { ep: 1, title: 'أنجين', thumbnail: 'https://placehold.co/400x225/111827/ffffff?text=S01E01' },
                            { ep: 2, title: 'خدم سيدين', thumbnail: 'https://placehold.co/400x225/111827/ffffff?text=S01E02' },
                            { ep: 3, title: 'الغد هو الغد', thumbnail: 'https://placehold.co/400x225/111827/ffffff?text=S01E03' },
                        ]
                    }
                ],
                servers: [
                    { name: 'Vidsrc', url: 'https://player.vidsrc.to/embed/tv/tt2788316' },
                    { name: 'Multiembed', url: 'https://multiembed.mov/?video_id=tt2788316' },
                ]
            },
            {
                id: 3,
                title: 'أوبنهايمر',
                year: 2023,
                rating: 8.6,
                genre: ['سيرة ذاتية', 'دراما', 'تاريخ'],
                description: 'قصة العالم الأمريكي جيه. روبرت أوبنهايمر ودوره في تطوير القنبلة الذرية.',
                poster: 'https://placehold.co/500x750/1a202c/ffffff?text=Oppenheimer',
                backdrop: 'https://placehold.co/1920x1080/1a202c/ffffff?text=Oppenheimer',
                cast: ['كيليان مورفي', 'إميلي بلانت', 'مات ديمون'],
                trailer: 'https://www.youtube.com/embed/uYPbbksJxIg',
                isSeries: false,
                isFeatured: true,
                servers: [
                    { name: 'سيرفر 1', url: 'https://player.vidsrc.to/embed/movie/tt15398776' },
                ]
            },
            {
                id: 4,
                title: 'ذا بير',
                year: 2022,
                rating: 8.5,
                genre: ['كوميديا', 'دراما'],
                description: 'طاهٍ شاب من عالم المطاعم الفاخرة يعود إلى شيكاغو لإدارة مطعم شطائر عائلته.',
                poster: 'https://placehold.co/500x750/1a202c/ffffff?text=The+Bear',
                backdrop: 'https://placehold.co/1920x1080/1a202c/ffffff?text=The+Bear',
                cast: ['جيريمي ألين وايت', 'أيو إدبيري', 'إيبون موس باتشراش'],
                trailer: 'https://www.youtube.com/embed/y-cLuT0O_8E',
                isSeries: true,
                seasons: [
                    {
                        season: 1,
                        episodes: Array.from({length: 8}, (_, i) => ({ ep: i + 1, title: `الحلقة ${i+1}`, thumbnail: `https://placehold.co/400x225/111827/ffffff?text=S01E${i+1}`}))
                    },
                    {
                        season: 2,
                        episodes: Array.from({length: 10}, (_, i) => ({ ep: i + 1, title: `الحلقة ${i+1}`, thumbnail: `https://placehold.co/400x225/111827/ffffff?text=S02E${i+1}`}))
                    }
                ],
                servers: [
                     { name: 'سيرفر 1', url: 'https://player.vidsrc.to/embed/tv/tt14452776' },
                ]
            },
            ...Array.from({ length: 18 }, (_, i) => ({
                id: 5 + i,
                title: `فيلم رائع ${i + 1}`,
                year: 2020 + (i % 5),
                rating: (7.0 + Math.random() * 2.5).toFixed(1),
                genre: [['أكشن', 'إثارة'], ['كوميديا', 'رومانسي'], ['رعب', 'غموض'], ['خيال علمي', 'مغامرة']][i%4],
                description: 'وصف مؤقت لفيلم رائع سيبقيك على حافة مقعدك.',
                poster: `https://placehold.co/500x750/1a202c/ffffff?text=Movie+${i + 1}`,
                isSeries: i % 3 === 0,
                servers: [{ name: 'سيرفر 1', url: '#' }]
            }))
        ];

        // --- GLOBAL STATE & CONSTANTS ---
        const state = {
            currentPage: 'home',
            currentItemId: null,
            currentListPage: 1,
            itemsPerPage: 12,
        };

        const pages = {
            home: document.getElementById('home-page'),
            details: document.getElementById('details-page'),
            list: document.getElementById('list-page'),
        };

        // --- RENDER FUNCTIONS ---
        
        const createMovieCard = (item) => `
            <div class="group relative rounded-lg overflow-hidden shadow-lg bg-gray-800 transform hover:-translate-y-2 transition-transform duration-300 cursor-pointer" data-id="${item.id}">
                <img src="${item.poster}" alt="${item.title}" class="w-full h-full object-cover" loading="lazy">
                <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                    <div class="play-icon-hover w-16 h-16 bg-red-600/70 rounded-full flex items-center justify-center backdrop-blur-sm">
                        <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20"><path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.841z"></path></svg>
                    </div>
                </div>
                <div class="absolute bottom-0 left-0 right-0 p-3 card-overlay text-right">
                    <h3 class="text-white font-bold truncate">${item.title}</h3>
                    <div class="flex justify-between items-center text-xs text-gray-300 mt-1">
                        <span>${item.year}</span>
                        <div class="flex items-center space-x-1 space-x-reverse">
                             <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg>
                            <span>${item.rating}</span>
                        </div>
                    </div>
                </div>
                ${item.isSeries ? '<div class="absolute top-2 right-2 bg-red-600 text-white text-xs font-bold px-2 py-1 rounded">مسلسل</div>' : ''}
            </div>
        `;
        
        const renderHomePage = () => {
            const featured = mockDatabase.filter(item => item.isFeatured).slice(0, 5);
            const latestMovies = mockDatabase.filter(item => !item.isSeries).sort((a,b) => b.year - a.year).slice(0, 6);
            const latestSeries = mockDatabase.filter(item => item.isSeries).sort((a,b) => b.year - a.year).slice(0, 6);
            const topRated = [...mockDatabase].sort((a,b) => b.rating - a.rating).slice(0, 6);
            const trending = [...mockDatabase].sort(() => 0.5 - Math.random()).slice(0, 6);

            // Render Slider
            const sliderContainer = document.getElementById('slider-container');
            const sliderDots = document.getElementById('slider-dots');
            sliderContainer.innerHTML = featured.map((item, index) => `
                <div class="slider-item absolute inset-0 ${index === 0 ? 'active' : ''}" data-index="${index}">
                    <img src="${item.backdrop || item.poster}" class="w-full h-full object-cover">
                    <div class="absolute inset-0 bg-gradient-to-t from-gray-900 via-gray-900/70 to-transparent"></div>
                    <div class="absolute bottom-0 right-0 p-8 md:p-12 text-white max-w-2xl text-right">
                        <h2 class="text-3xl md:text-5xl font-bold">${item.title}</h2>
                        <p class="mt-4 hidden md:block text-gray-300">${item.description.substring(0, 150)}...</p>
                        <button class="mt-6 bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-300 flex items-center space-x-2 space-x-reverse view-details-btn" data-id="${item.id}">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20"><path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.841z"></path></svg>
                            <span>شاهد الآن</span>
                        </button>
                    </div>
                </div>
            `).join('');
            sliderDots.innerHTML = featured.map((_, index) => `<button class="slider-dot w-3 h-3 rounded-full ${index === 0 ? 'bg-red-600' : 'bg-gray-500'}" data-index="${index}"></button>`).join('');

            // Render Content Sections
            const contentSections = document.getElementById('content-sections');
            const sections = [
                { title: 'أحدث الأفلام 🎬', items: latestMovies },
                { title: 'أحدث المسلسلات 📺', items: latestSeries },
                { title: 'الأعلى تقييماً 🎖️', items: topRated },
                { title: 'الأكثر مشاهدة 🔥', items: trending },
            ];
            contentSections.innerHTML = sections.map(section => `
                <section class="mb-10">
                    <h2 class="text-2xl font-bold text-white mb-4">${section.title}</h2>
                    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 md:gap-6">
                        ${section.items.map(createMovieCard).join('')}
                    </div>
                </section>
            `).join('');
        };
        
        const renderDetailsPage = (itemId) => {
            const item = mockDatabase.find(i => i.id === parseInt(itemId));
            if (!item) {
                pages.details.innerHTML = `<div class="text-center py-20">العنصر غير موجود.</div>`;
                return;
            }
            
            const watchSectionHTML = `
                 <div id="watch-section" class="mt-8 bg-gray-900 rounded-lg overflow-hidden" style="display: none;">
                    <div class="aspect-w-16 aspect-h-9">
                        <iframe id="video-player" src="" frameborder="0" allowfullscreen class="w-full h-full"></iframe>
                    </div>
                 </div>`;

            let contentHTML = '';
            if (item.isSeries) {
                contentHTML = `
                    <div id="seasons-container" class="mt-8">
                        <!-- Seasons and episodes will be rendered here -->
                    </div>
                `;
            }

            pages.details.innerHTML = `
                <div class="relative h-[40vh] md:h-[60vh] -mt-16">
                    <img src="${item.backdrop || item.poster}" class="w-full h-full object-cover">
                    <div class="absolute inset-0 bg-gradient-to-t from-gray-900 to-transparent"></div>
                </div>
                <div class="container mx-auto px-4 sm:px-6 lg:px-8 -mt-24 relative z-10 pb-12">
                    <div class="flex flex-col md:flex-row gap-8">
                        <div class="flex-shrink-0 w-48 md:w-64 mx-auto md:mx-0">
                            <img src="${item.poster}" alt="${item.title}" class="rounded-lg shadow-lg">
                        </div>
                        <div class="flex-grow text-center md:text-right">
                            <h1 class="text-4xl font-extrabold text-white">${item.title} (${item.year})</h1>
                            <div class="flex items-center justify-center md:justify-start gap-4 mt-2 text-gray-300">
                                <span class="font-semibold">${item.genre.join('، ')}</span>
                                <span class="flex items-center gap-1">
                                    <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path></svg>
                                    ${item.rating}
                                </span>
                            </div>
                            <p class="mt-4 text-gray-400 max-w-3xl mx-auto md:mx-0">${item.description}</p>
                            <div class="mt-4">
                                <h3 class="font-semibold text-white">طاقم العمل:</h3>
                                <p class="text-gray-400">${item.cast ? item.cast.join('، ') : 'غير متوفر'}</p>
                            </div>
                            <div class="mt-6 flex flex-wrap gap-4 justify-center md:justify-start">
                                <a href="${item.trailer}" target="_blank" class="bg-gray-700 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded-lg transition-colors flex items-center gap-2">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                                    مشاهدة الإعلان
                                </a>
                                <button id="watch-online-btn" class="bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg transition-colors flex items-center gap-2">
                                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.841z"></path></svg>
                                    مشاهدة أونلاين
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div id="server-tabs" class="mt-8 border-b border-gray-700" style="display: none;">
                        <div class="flex space-x-4 space-x-reverse">
                            ${item.servers.map((server, index) => `
                                <button class="server-tab-btn py-2 px-4 text-gray-300 hover:text-white border-b-2 border-transparent hover:border-red-500 transition-colors ${index === 0 ? 'active text-white border-red-500' : ''}" data-url="${server.url}">${server.name}</button>
                            `).join('')}
                        </div>
                    </div>
                    
                    ${watchSectionHTML}
                    ${contentHTML}
                </div>
            `;
            
            if (item.isSeries) {
                renderSeasons(item);
            }
        };

        const renderSeasons = (series) => {
            const container = document.getElementById('seasons-container');
            if (!container) return;

            let seasonsHTML = '<div class="flex space-x-2 space-x-reverse mb-4 border-b border-gray-700 pb-2">';
            series.seasons.forEach((s, index) => {
                seasonsHTML += `<button class="season-btn px-4 py-2 rounded-lg transition-colors ${index === 0 ? 'bg-red-600 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700'}" data-season="${s.season}">موسم ${s.season}</button>`;
            });
            seasonsHTML += '</div><div id="episodes-grid"></div>';
            container.innerHTML = seasonsHTML;

            const renderEpisodesForSeason = (seasonNum) => {
                const season = series.seasons.find(s => s.season == seasonNum);
                const episodesGrid = document.getElementById('episodes-grid');
                episodesGrid.innerHTML = `
                    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                        ${season.episodes.map(ep => `
                            <div class="group bg-gray-800 rounded-lg overflow-hidden cursor-pointer" data-ep="${ep.ep}">
                                <div class="relative">
                                    <img src="${ep.thumbnail}" alt="الحلقة ${ep.ep}" class="w-full h-auto object-cover">
                                    <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                                         <div class="play-icon-hover w-10 h-10 bg-red-600/70 rounded-full flex items-center justify-center backdrop-blur-sm">
                                            <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20"><path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.841z"></path></svg>
                                        </div>
                                    </div>
                                </div>
                                <div class="p-3 text-right">
                                    <h4 class="text-white font-semibold truncate">ح${ep.ep}: ${ep.title}</h4>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                `;
            }
            renderEpisodesForSeason(1);

            container.addEventListener('click', e => {
                 if(e.target.classList.contains('season-btn')) {
                    document.querySelectorAll('.season-btn').forEach(btn => btn.classList.remove('bg-red-600', 'text-white') & btn.classList.add('bg-gray-800', 'text-gray-300'));
                    e.target.classList.add('bg-red-600', 'text-white');
                    e.target.classList.remove('bg-gray-800', 'text-gray-300');
                    renderEpisodesForSeason(e.target.dataset.season);
                 }
            });
        };

        const renderListPage = (title, items) => {
            document.getElementById('list-page-title').textContent = title;
            const grid = document.getElementById('list-page-grid');
            grid.innerHTML = items.length > 0 ? items.map(createMovieCard).join('') : `<p class="col-span-full text-center">لا توجد نتائج.</p>`;
        };


        // --- NAVIGATION & PAGE MANAGEMENT ---
        
        const navigateTo = (pageName, data = {}) => {
            window.scrollTo(0, 0);
            
            Object.values(pages).forEach(p => p.classList.remove('active'));
            document.querySelectorAll('.nav-link').forEach(l => l.classList.remove('active'));

            const targetPage = pages[pageName.startsWith('list-') ? 'list' : pageName];
            if(targetPage) {
                targetPage.classList.add('active');
            }

            document.querySelectorAll(`.nav-link[data-page="${data.nav_id || pageName}"]`).forEach(l => l.classList.add('active'));

            state.currentPage = pageName;

            switch(pageName) {
                case 'home':
                    renderHomePage();
                    setupSlider();
                    break;
                case 'details':
                    state.currentItemId = data.id;
                    renderDetailsPage(data.id);
                    break;
                case 'list-movies':
                    renderListPage('كل الأفلام', mockDatabase.filter(item => !item.isSeries));
                    break;
                case 'list-series':
                    renderListPage('كل المسلسلات', mockDatabase.filter(item => item.isSeries));
                    break;
                case 'list-categories':
                    const allGenres = [...new Set(mockDatabase.flatMap(item => item.genre))];
                     document.getElementById('list-page-title').textContent = 'الفئات';
                     document.getElementById('list-page-grid').innerHTML = allGenres.map(genre => `
                        <div class="category-card h-32 rounded-lg bg-gray-800 hover:bg-red-700 flex items-center justify-center text-xl font-bold text-white cursor-pointer transition-colors" data-genre="${genre}">
                            ${genre}
                        </div>
                     `).join('');
                    break;
                case 'list-genre':
                    renderListPage(data.genre, mockDatabase.filter(item => item.genre.includes(data.genre)));
                    break;
                case 'list-search':
                    const query = data.query.toLowerCase();
                    const results = mockDatabase.filter(item => 
                        item.title.toLowerCase().includes(query) ||
                        item.genre.some(g => g.toLowerCase().includes(query)) ||
                        (item.cast && item.cast.some(c => c.toLowerCase().includes(query)))
                    );
                    renderListPage(`نتائج البحث عن "${data.query}"`, results);
                    break;
            }
        };

        // --- EVENT HANDLERS & INITIALIZATION ---
        let currentSlide = 0;
        let sliderInterval;
        const setupSlider = () => {
            const slides = document.querySelectorAll('.slider-item');
            const dots = document.querySelectorAll('.slider-dot');
            if (slides.length === 0) return;

            const showSlide = (index) => {
                slides.forEach((slide, i) => {
                    slide.classList.remove('active');
                    dots[i].classList.remove('bg-red-600');
                    dots[i].classList.add('bg-gray-500');
                });
                slides[index].classList.add('active');
                dots[index].classList.add('bg-red-600');
                dots[index].classList.remove('bg-gray-500');
                currentSlide = index;
            };

            const nextSlide = () => {
                showSlide((currentSlide + 1) % slides.length);
            };

            sliderInterval = setInterval(nextSlide, 5000);

            document.getElementById('slider-dots').addEventListener('click', (e) => {
                if(e.target.matches('.slider-dot')){
                    clearInterval(sliderInterval);
                    showSlide(parseInt(e.target.dataset.index));
                    sliderInterval = setInterval(nextSlide, 5000);
                }
            });
        }
        
        document.body.addEventListener('click', (e) => {
            const card = e.target.closest('.group[data-id], .view-details-btn[data-id]');
            if (card) {
                navigateTo('details', { id: card.dataset.id });
                return;
            }

            const navLink = e.target.closest('.nav-link[data-page]');
            if (navLink) {
                e.preventDefault();
                const page = navLink.dataset.page;
                const pageMap = {
                    'home': 'home',
                    'movies': 'list-movies',
                    'series': 'list-series',
                    'categories': 'list-categories'
                };
                navigateTo(pageMap[page], { nav_id: page });
                document.getElementById('mobile-menu').classList.add('hidden');
                return;
            }
            
            const categoryCard = e.target.closest('.category-card[data-genre]');
            if (categoryCard) {
                navigateTo('list-genre', { genre: categoryCard.dataset.genre });
                return;
            }

            if (e.target.id === 'watch-online-btn') {
                document.getElementById('watch-section').style.display = 'block';
                document.getElementById('server-tabs').style.display = 'flex';
                document.querySelector('.server-tab-btn')?.click();
            }

            const serverTab = e.target.closest('.server-tab-btn');
            if (serverTab) {
                document.querySelectorAll('.server-tab-btn').forEach(btn => btn.classList.remove('active', 'text-white', 'border-red-500'));
                serverTab.classList.add('active', 'text-white', 'border-red-500');
                document.getElementById('video-player').src = serverTab.dataset.url;
            }
        });
        
        document.getElementById('mobile-menu-button').addEventListener('click', () => {
            document.getElementById('mobile-menu').classList.toggle('hidden');
        });
        
        document.getElementById('search-input').addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && e.target.value.trim() !== '') {
                navigateTo('list-search', { query: e.target.value.trim() });
                e.target.value = '';
            }
        });

        // --- INITIAL LOAD ---
        navigateTo('home');
    });
    </script>
</body>
</html>

